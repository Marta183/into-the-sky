version: '3.8'
services:
  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
#      args:
#        ARTIFACT: target/discovery-server-${PROJECT_VERSION}.jar
    container_name: discovery-server
    ports: ['8761:8761']
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

#  postgres-users:
#    image: 'postgres:15-alpine'
#    container_name: postgres_users
#    restart: always
#    environment:
#      POSTGRES_DB: sky_users
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#    ports: ['5432:5432']
#    volumes:
#      - pgdata:/var/lib/postgresql/sky_users
#    networks:
#      - backend

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
#      args:
#        ARTIFACT: target/gateway-${PROJECT_VERSION}.jar
    container_name: gateway
    depends_on:
      discovery-server:
        condition: service_healthy
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/
      SPRING_SECURITY_JWT_SECRET: '${SPRING_SECURITY_JWT_SECRET}'
    ports: ['8080:8080']
    networks:
      - backend

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
#      args:
#        ARTIFACT: target/user-service-${PROJECT_VERSION}.jar
    container_name: user-service
    depends_on:
      discovery-server:
        condition: service_healthy
#      - postgres-users
    environment:
      SPRING_DATASOURCE_URL: '${SPRING_DATASOURCE_URL}'
      SPRING_DATASOURCE_USERNAME: '${SPRING_DATASOURCE_USERNAME}'
      SPRING_DATASOURCE_PASSWORD: '${SPRING_DATASOURCE_PASSWORD}'
      SPRING_SECURITY_JWT_SECRET: '${SPRING_SECURITY_JWT_SECRET}'
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka/
    ports: ['8081:8081']
    networks:
      - backend

networks:
  backend:
    driver: bridge
volumes:
  pgdata:
    driver: local